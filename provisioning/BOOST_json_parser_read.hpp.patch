--- /usr/include/boost/property_tree/detail/json_parser_read.hpp	2014-08-08 09:06:31.070294015 +0000
+++ /usr/include/boost/property_tree/detail/json_parser_read.hpp	2014-08-08 09:08:00.851294045 +0000
@@ -128,7 +128,6 @@
                 {
                     case Ch('\"'): c.string += Ch('\"'); break;
                     case Ch('\\'): c.string += Ch('\\'); break;
-                    case Ch('0'): c.string += Ch('\0'); break;
                     case Ch('b'): c.string += Ch('\b'); break;
                     case Ch('f'): c.string += Ch('\f'); break;
                     case Ch('n'): c.string += Ch('\n'); break;
@@ -230,12 +229,16 @@
                         | object 
                         | array
                         ;
-                
+
                 number 
-                    =   strict_real_p 
-                        | int_p
+                    =   !ch_p("-") >>
+                        (ch_p("0") | (range_p(Ch('1'), Ch('9')) >> *digit_p)) >>
+                        !(ch_p(".") >> +digit_p) >>
+                        !(chset_p(detail::widen<Ch>("eE").c_str()) >>
+                          !chset_p(detail::widen<Ch>("-+").c_str()) >>
+                          +digit_p)
                         ;
-                
+ 
                 string 
                     =   +(lexeme_d[confix_p('\"', *character, '\"')])
                         ;
@@ -246,7 +249,7 @@
                         ;
                 
                 escape 
-                    =   chset_p(detail::widen<Ch>("\"\\0bfnrt").c_str())[typename Context::a_escape(self.c)] 
+                    =   chset_p(detail::widen<Ch>("\"\\bfnrt").c_str())[typename Context::a_escape(self.c)] 
                         | 'u' >> uint_parser<unsigned long, 16, 4, 4>()[typename Context::a_unicode(self.c)]
                         ;
                 
